package gui;

import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import controlador.bd.Crud;
import controlador.bd.Sql3;
import controlador.bd.Sql4;
import controlador.bd.Sql5;
import controlador.user.ControladorTabla;
import controlador.user.ControladorVentana;
import java.awt.Toolkit;
import modelo.Libro;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.InventarioLibros;

/**
 *
 * @author shelb
 */
public class RegistroLibro extends javax.swing.JFrame {

    Crud crud;
    Libro registroL;
    InventarioLibros inv;
    DefaultTableModel modelo;
    private int idSeleccionado = -1;
    private int id_seleccionado;

    public RegistroLibro() {
        initComponents();
        estiloBuscador();
        estiloTabla();
        this.setTitle("Libros");
        this.crud = new Crud();
        this.modelo = new DefaultTableModel();
        this.mostrarLibros();
        this.setExtendedState(MAXIMIZED_BOTH);
        ControladorVentana.ExitConfirmation(this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLibros = new javax.swing.JTable();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtAutor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        comboCat = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtEditorial = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        spNumPag = new javax.swing.JSpinner();
        txtNombreL = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        spDisponible = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        spCantidad = new javax.swing.JSpinner();
        nuevoRegistro = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 70, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Libros", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(17, 152, 85))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblLibros.setFont(new java.awt.Font("Arial Rounded MT Bold", 2, 14)); // NOI18N
        tblLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblLibros.getTableHeader().setReorderingAllowed(false);
        tblLibros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLibrosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblLibros);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 680, 370));

        btnEliminar.setBackground(new java.awt.Color(255, 255, 255));
        btnEliminar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(17, 152, 85));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel2.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, -1, -1));

        btnEditar.setBackground(new java.awt.Color(255, 255, 51));
        btnEditar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(0, 0, 0));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editar.png"))); // NOI18N
        btnEditar.setText("Actualizar");
        btnEditar.setSelected(true);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel2.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 50, -1, -1));

        btnAgregar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(17, 152, 85));
        btnAgregar.setText("Agregar");
        btnAgregar.setEnabled(false);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel2.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 140, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 150, 700, 600));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registro de Libro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Rounded MT Bold", 0, 12), new java.awt.Color(17, 152, 85))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(17, 152, 85));
        jLabel1.setText("Autor");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 102, -1));

        txtAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAutorActionPerformed(evt);
            }
        });
        txtAutor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAutorKeyTyped(evt);
            }
        });
        jPanel3.add(txtAutor, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 450, 40));

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(17, 152, 85));
        jLabel2.setText("Categoria");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        comboCat.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        comboCat.setForeground(new java.awt.Color(17, 152, 85));
        comboCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Matematicas", "Historia", "Ciencias", " " }));
        comboCat.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                comboCatComponentHidden(evt);
            }
        });
        comboCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCatActionPerformed(evt);
            }
        });
        jPanel3.add(comboCat, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 180, 30));

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(17, 152, 85));
        jLabel3.setText("Editorial ");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, -1, -1));

        txtEditorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEditorialActionPerformed(evt);
            }
        });
        txtEditorial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEditorialKeyTyped(evt);
            }
        });
        jPanel3.add(txtEditorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, 450, 40));

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(17, 152, 85));
        jLabel4.setText("Cantidad");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 350, -1, 20));

        jLabel6.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(17, 152, 85));
        jLabel6.setText("Disponibles:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 350, 80, 20));

        spNumPag.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        spNumPag.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                spNumPagKeyTyped(evt);
            }
        });
        jPanel3.add(spNumPag, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, 70, 30));

        txtNombreL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreLActionPerformed(evt);
            }
        });
        txtNombreL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreLKeyTyped(evt);
            }
        });
        jPanel3.add(txtNombreL, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 450, 40));

        jLabel9.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(17, 152, 85));
        jLabel9.setText("Nombre del libro");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 102, -1));

        spDisponible.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        spDisponible.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                spDisponibleKeyTyped(evt);
            }
        });
        jPanel3.add(spDisponible, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 370, 70, 30));

        jLabel10.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(17, 152, 85));
        jLabel10.setText("N° de pagina");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, -1, 20));

        spCantidad.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        spCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                spCantidadKeyTyped(evt);
            }
        });
        jPanel3.add(spCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 370, 70, 30));

        nuevoRegistro.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        nuevoRegistro.setForeground(new java.awt.Color(17, 152, 85));
        nuevoRegistro.setText("Registrar nuevo libro");
        nuevoRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoRegistroActionPerformed(evt);
            }
        });
        nuevoRegistro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nuevoRegistroKeyPressed(evt);
            }
        });
        jPanel3.add(nuevoRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 460, 180, 40));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 580, 600));

        jPanel4.setBackground(new java.awt.Color(17, 152, 85));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton5.setForeground(new java.awt.Color(17, 152, 85));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/salida.png"))); // NOI18N
        jButton5.setText("Regresar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 0, 210, 30));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 30));

        jLabel8.setBackground(new java.awt.Color(0, 51, 153));
        jLabel8.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 48)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(17, 152, 85));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/libro.png"))); // NOI18N
        jLabel8.setText("BiblioNET");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 350, 90));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 771, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtEditorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEditorialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEditorialActionPerformed

    private void txtAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAutorActionPerformed

    private void comboCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboCatActionPerformed

    private void comboCatComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_comboCatComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_comboCatComponentHidden

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:

        if (this.txtNombreL.getText().isEmpty() || this.txtEditorial.getText().isEmpty() || this.txtAutor.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor complete todos los campos", "Campos en blanco", JOptionPane.INFORMATION_MESSAGE);
            btnAgregar.setEnabled(false);

        } else {
            Libro libros = new Libro();

            libros.setNombreLibro(this.txtNombreL.getText());
            String posicion = (String) comboCat.getSelectedItem();
            libros.setCategoriaLibro(posicion);
            libros.setEditorial(this.txtEditorial.getText());
            libros.setAutor(this.txtAutor.getText());
            libros.setNumPagina((int) this.spNumPag.getValue());
            libros.setCantidad((int) this.spCantidad.getValue());

            Crud crud = new Crud();

            // Inserta el libro
            boolean resultadoLibro = crud.insertar(Sql4.insertarLibro(libros));

            if (resultadoLibro) {
                // Obtener el último ID insertado para el libro
                int idLibro = crud.obtenerUltimoIdInsertado();

                InventarioLibros inventario = new InventarioLibros();
                inventario.setId_libro(idLibro); // Usar el ID generado del libro
                inventario.setStock((int) this.spCantidad.getValue());
                inventario.setCantDisponible((int) this.spDisponible.getValue());

                // Inserta el inventario usando el ID del libro
                boolean resultadoInventario = crud.insertar(Sql3.insertarInventario(inventario));

                if (resultadoInventario) {
                    JOptionPane.showMessageDialog(null, "Libro registrado y inventario actualizado", "Éxito", 1);
                    mostrarLibros();
                    btnAgregar.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Error al registrar inventario", "Error", 2);
                    btnAgregar.setEnabled(false);

                }
            } else {
                JOptionPane.showMessageDialog(null, "Error al registrar libro", "Error", 2);
                btnAgregar.setEnabled(false);

            }
        }

        if (evt.getSource() == this.btnAgregar) {
            this.txtNombreL.setText("");
            this.txtEditorial.setText("");
            this.txtAutor.setText("");
        }


    }//GEN-LAST:event_btnAgregarActionPerformed

    private void txtNombreLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreLActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        VentanaPrincipal newframe = new VentanaPrincipal();
        newframe.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:

        if (evt.getSource() == this.btnEditar) {
            modificar();
        }

    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:

        boolean resultado = this.crud.actualizarEliminar(Sql4.eliminarLibro(this.idSeleccionado));

        if (tblLibros.getSelectedRow() == -1) {

            JOptionPane.showMessageDialog(null, "Error no selecciono un registro");

        } else if (resultado) {
            JOptionPane.showMessageDialog(null, "Libro Eliminado");
            mostrarLibros();
        } else {
            JOptionPane.showMessageDialog(null, "No eliminado");
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void spNumPagKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spNumPagKeyTyped
        // TODO add your handling code here:

        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(null, "Invalido, no se ingresaron numeros");
        }
    }//GEN-LAST:event_spNumPagKeyTyped

    private void spDisponibleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spDisponibleKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            evt.consume();

            JOptionPane.showMessageDialog(null, "No puede ingresar letras", "Tipo de entrada", JOptionPane.WARNING_MESSAGE);

        }


    }//GEN-LAST:event_spDisponibleKeyTyped

    private void spCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spCantidadKeyTyped
        // TODO add your handling code here:

        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            evt.consume();

            JOptionPane.showMessageDialog(null, "No puede ingresar letras", "Tipo de entrada", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_spCantidadKeyTyped

    private void txtEditorialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEditorialKeyTyped
        // TODO add your handling code here:

        if (this.txtEditorial.getText().length() >= 30) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Limite de caracteres alcanzado", "Longitud de caracteres", JOptionPane.INFORMATION_MESSAGE);

        }

        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();

            JOptionPane.showMessageDialog(null, "No puede ingresar números", "Tipo de entrada", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_txtEditorialKeyTyped

    private void txtAutorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAutorKeyTyped
        // TODO add your handling code here:

        if (this.txtAutor.getText().length() >= 25) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Limite de caracteres alcanzado", "Longitud de caracteres", JOptionPane.INFORMATION_MESSAGE);

        }

        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();

            JOptionPane.showMessageDialog(null, "No puede ingresar números", "Tipo de entrada", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_txtAutorKeyTyped

    private void txtNombreLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreLKeyTyped
        // TODO add your handling code here:

        if (this.txtNombreL.getText().length() >= 50) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Limite de caracteres alcanzado", "Longitud de caracteres", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_txtNombreLKeyTyped

    private void nuevoRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoRegistroActionPerformed

        btnAgregar.setEnabled(true);

        this.txtNombreL.setText("");
        this.txtEditorial.setText("");
        this.txtAutor.setText("");
    }//GEN-LAST:event_nuevoRegistroActionPerformed

    private void nuevoRegistroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nuevoRegistroKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_nuevoRegistroKeyPressed

    private void tblLibrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLibrosMouseClicked

        int fila = this.tblLibros.getSelectedRow();
        idSeleccionado = Integer.parseInt(tblLibros.getValueAt(fila, 0).toString());
        ControladorTabla.getInstance().setIdSeleccionado(idSeleccionado);
        if (fila >= 0) {
            // Asumiendo que la primera columna es un id
            idSeleccionado = Integer.parseInt(tblLibros.getValueAt(fila, 0).toString());

            // Obtener datos de cada columna de la fila seleccionada
            String col1 = tblLibros.getValueAt(fila, 1).toString();
            String comboBoxValue = tblLibros.getValueAt(fila, 2).toString();
            String col3 = tblLibros.getValueAt(fila, 3).toString();
            String col4 = tblLibros.getValueAt(fila, 4).toString();
            int spinnerValue = Integer.parseInt(tblLibros.getValueAt(fila, 5).toString());
            int spinnerValue2 = Integer.parseInt(tblLibros.getValueAt(fila, 6).toString());

            // Pasar los datos a los JTextField correspondientes
            txtNombreL.setText(col1);
            comboCat.setSelectedItem(comboBoxValue);
            txtEditorial.setText(col3);
            txtAutor.setText(col4);
            spNumPag.setValue(spinnerValue);
            spCantidad.setValue(spinnerValue2);
            System.out.println("ID Seleccionado en MouseClicked: " + idSeleccionado);
        }
    }//GEN-LAST:event_tblLibrosMouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JComboBox<String> comboCat;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nuevoRegistro;
    private javax.swing.JSpinner spCantidad;
    private javax.swing.JSpinner spDisponible;
    private javax.swing.JSpinner spNumPag;
    public javax.swing.JTable tblLibros;
    private javax.swing.JTextField txtAutor;
    private javax.swing.JTextField txtEditorial;
    private javax.swing.JTextField txtNombreL;
    // End of variables declaration//GEN-END:variables

    protected void mostrarLibros() {

        this.modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Hacer que todas las celdas sean no editables
            }
        };

        //this.modelo.addColumn("Seleccionar"); // Columna para seleccionar
        this.modelo.addColumn("ID");
        this.modelo.addColumn("Nombre del libro");
        this.modelo.addColumn("Categoria");
        this.modelo.addColumn("Editorial");
        this.modelo.addColumn("Autor");
        this.modelo.addColumn("Num página");
        this.modelo.addColumn("Cantidad");

        try {
            ResultSet resultado = this.crud.seleccionar(Sql4.seleccionarLibro());

            while (resultado.next()) {  //usar objeto resultado y el metodo next que permitira iterar entre todos los resultados

                Object[] libros = { //objeto que se anexara al modelo

                    //false,
                    resultado.getInt(1),
                    resultado.getString(2),
                    resultado.getString(3),
                    resultado.getString(4),
                    resultado.getString(5),
                    resultado.getInt(6),
                    resultado.getInt(7)
                };

                modelo.addRow(libros);

            }//cierra while

            this.tblLibros.setModel(modelo);

//            // Configurar la tabla para que la primera columna sea un checkbox (Boolean)
//        tblLibros.getColumnModel().getColumn(0).setCellEditor(new DefaultCellEditor(new JCheckBox()));
//        tblLibros.getColumnModel().getColumn(0).setCellRenderer(tblLibros.getDefaultRenderer(Boolean.class));
        } catch (SQLException e) {
            System.out.println("error " + e.getMessage());
        }

    }

    private void modificar() {
        // Preguntar al usuario si desea guardar los cambios
    int respuesta = JOptionPane.showConfirmDialog(null, "¿Desea guardar los cambios?", "Confirmación", JOptionPane.YES_NO_OPTION);

    if (respuesta == JOptionPane.NO_OPTION) {
        // Si el usuario elige NO, se cancela la operación
        return;
    }

    this.registroL = new Libro();
    this.inv = new InventarioLibros();

    try {
        // Recogemos los datos
        String nombre = this.txtNombreL.getText().trim();
        String posicion = (String) comboCat.getSelectedItem();
        registroL.setCategoriaLibro(posicion);
        String edit = this.txtEditorial.getText().trim();
        String autor = this.txtAutor.getText().trim();

        // Asignamos al objeto
        this.registroL.setNombreLibro(nombre);
        this.registroL.setCategoriaLibro(posicion);
        this.registroL.setEditorial(edit);
        this.registroL.setAutor(autor);

        registroL.setNumPagina((int) this.spNumPag.getValue());
        registroL.setCantidad((int) this.spCantidad.getValue());

        inv.setStock((int) this.spCantidad.getValue());
        inv.setCantDisponible((int) this.spDisponible.getValue());

        id_seleccionado = ControladorTabla.getInstance().getIdSeleccionado();
        registroL.setId_libro(id_seleccionado);

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Ingrese valores válidos", "Error de formato", JOptionPane.ERROR_MESSAGE);
        return;  // Exit the code block if input is invalid
    }

    // ACTUALIZAR EN LA BD
    Crud crud = new Crud();

    String sql = Sql4.actualizarLibro(registroL);
    System.out.println("SQL: " + sql); // Imprimir la consulta SQL para verificar

    boolean resultado = crud.actualizarEliminar(Sql4.actualizarLibro(registroL));
    boolean resultado2 = crud.actualizarEliminar(Sql3.actualizarinventario(inv));

    if (resultado && resultado2) {
        JOptionPane.showMessageDialog(null, "Actualizado correctamente", "Exitoso", JOptionPane.DEFAULT_OPTION);
        mostrarLibros();
    } else {
        JOptionPane.showMessageDialog(null, "No se actualizó", "Error", JOptionPane.ERROR_MESSAGE);
    }

    }//cierra modificar

    protected void borrarLibroConInventario() {
        boolean resultado = this.crud.actualizarEliminar(Sql4.eliminarLibro(this.idSeleccionado));

        if (tblLibros.getSelectedRow() == -1) {

            JOptionPane.showMessageDialog(null, "Error no selecciono un registro");

        } else if (resultado) {
            JOptionPane.showMessageDialog(null, "Libro Eliminado");
            mostrarLibros();
        } else {
            JOptionPane.showMessageDialog(null, "No eliminado");
        }
    }

    private void estiloTabla() {

        jScrollPane1.putClientProperty(FlatClientProperties.STYLE, ""
                + "arc:25;"
                + "background:$Table.background;");

        tblLibros.getTableHeader().putClientProperty(FlatClientProperties.STYLE, ""
                + "height:30;"
                + "hoverBackground:null;"
                + "pressedBackground:null;"
                + "separatorColor:$TableHeader.background;"
                + "font:bold;");

        tblLibros.putClientProperty(FlatClientProperties.STYLE, ""
                + "rowHeight:30;"
                + "showHorizontalLines:true;"
                + "intercellSpacing:0,1;"
                + "cellFocusColor:$TableHeader.hoverBackground;"
                + "selectionBackground:$TableHeader.hoverBackground;"
                + "selectionForeground:$Table.foreground;");

    }
    
     private void estiloBuscador(){
   
    
     
    txtNombreL.putClientProperty(FlatClientProperties.STYLE, ""
        + "arc:13;"
        + "borderWidth:0;"
        + "focusWidth:0;"
    + "background:$Panel.background");
    
 
     
    comboCat.putClientProperty(FlatClientProperties.STYLE, ""
        + "arc:13;"
        + "borderWidth:0;"
        + "focusWidth:0;"
        + "background:$Panel.background");
    
    
     
    txtEditorial.putClientProperty(FlatClientProperties.STYLE, ""
        + "arc:13;"
        + "borderWidth:0;"
        + "focusWidth:0;"
        + "background:$Panel.background");
    
     
    txtAutor.putClientProperty(FlatClientProperties.STYLE, ""
        + "arc:13;"
        + "borderWidth:0;"
        + "focusWidth:0;"
        + "background:$Panel.background");
    
    //---------------------------------------------------------------
     
    spNumPag.putClientProperty(FlatClientProperties.STYLE, ""
        + "arc:23;"
        + "borderWidth:0;"
        + "focusWidth:0;"
        + "background:$Panel.background");
    
     
    spCantidad.putClientProperty(FlatClientProperties.STYLE, ""
        + "arc:23;"
        + "borderWidth:0;"
        + "focusWidth:0;"
        + "background:$Panel.background");
    
    
     
    spDisponible.putClientProperty(FlatClientProperties.STYLE, ""
        + "arc:23;"
        + "borderWidth:0;"
        + "focusWidth:0;"
        + "background:$Panel.background");
    
    btnAgregar.putClientProperty(FlatClientProperties.STYLE, ""
        +"hoverBackground: #119855;"
        +"hoverForeground: #00FFFF;");
}

}
