package gui;
//Comentario


import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.fonts.roboto.FlatRobotoFont;
import java.sql.Connection;
import controlador.bd.Conexion;
import controlador.user.ControladorVentana;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import com.formdev.flatlaf.themes.FlatMacDarkLaf;
import com.formdev.flatlaf.themes.FlatMacLightLaf;
import com.formdev.flatlaf.ui.FlatStylingSupport.UnknownStyleException;
import java.awt.Color;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.geom.RoundRectangle2D;
import java.time.LocalTime;
import javax.swing.JFrame;

public class Login extends javax.swing.JFrame {

    //PruebaCambio
    public Login() {

        // Desactiva los bordes del sistema para que puedas personalizar los tuyos
        configTheme();
        setUndecorated(true);
//        configTheme();
        ventanaLogin();

        initComponents();
        estiloBuscador();

//        jPanel1.setBorder(BorderFactory.createLineBorder(Color.yellow, 2));
        // Añade un borde visible para hacer el redondeo más evidente
        getRootPane().setBorder(BorderFactory.createLineBorder(Color.BLACK, 0));

        // Hace que el JFrame se cierre al hacer clic en la "X"
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        this.setTitle("Login");
        this.setResizable(false);
        this.setLocationRelativeTo(null);

        ControladorVentana.ExitConfirmation(this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jpLogin = new javax.swing.JPanel();
        txtUser = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();
        btnRegistro = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        Password = new javax.swing.JPasswordField();
        btnLimpiar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setForeground(new java.awt.Color(92, 179, 92));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpLogin.setBackground(new java.awt.Color(161, 161, 161));
        jpLogin.setForeground(new java.awt.Color(0, 145, 60));
        jpLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jpLogin.setOpaque(false);
        jpLogin.setRequestFocusEnabled(false);
        jpLogin.setLayout(null);

        txtUser.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        txtUser.setBorder(null);
        txtUser.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUserKeyTyped(evt);
            }
        });
        jpLogin.add(txtUser);
        txtUser.setBounds(150, 170, 200, 30);

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(17, 152, 85));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/usu2.png"))); // NOI18N
        jpLogin.add(jLabel3);
        jLabel3.setBounds(90, 170, 40, 30);

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(17, 152, 85));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/contra2.png"))); // NOI18N
        jpLogin.add(jLabel1);
        jLabel1.setBounds(90, 230, 50, 40);

        btnAceptar.setBackground(new java.awt.Color(0, 255, 255));
        btnAceptar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnAceptar.setForeground(new java.awt.Color(17, 152, 85));
        btnAceptar.setText("Iniciar sesión");
        btnAceptar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        jpLogin.add(btnAceptar);
        btnAceptar.setBounds(30, 300, 130, 50);

        btnRegistro.setBackground(new java.awt.Color(0, 255, 255));
        btnRegistro.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnRegistro.setForeground(new java.awt.Color(17, 152, 85));
        btnRegistro.setText("Registrarse");
        btnRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistroActionPerformed(evt);
            }
        });
        jpLogin.add(btnRegistro);
        btnRegistro.setBounds(140, 380, 140, 40);

        jLabel2.setBackground(new java.awt.Color(0, 51, 153));
        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(17, 152, 85));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/libro.png"))); // NOI18N
        jLabel2.setText("BiblioNET");
        jpLogin.add(jLabel2);
        jLabel2.setBounds(40, 40, 350, 110);

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jpLogin.add(jSeparator1);
        jSeparator1.setBounds(150, 207, 200, 3);

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jpLogin.add(jSeparator2);
        jSeparator2.setBounds(150, 270, 200, 10);

        Password.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        Password.setBorder(null);
        Password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PasswordKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PasswordKeyTyped(evt);
            }
        });
        jpLogin.add(Password);
        Password.setBounds(150, 232, 200, 30);

        btnLimpiar.setBackground(new java.awt.Color(0, 255, 255));
        btnLimpiar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(17, 152, 85));
        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/broom2.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        jpLogin.add(btnLimpiar);
        btnLimpiar.setBounds(220, 300, 170, 50);

        jPanel1.add(jpLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 430, 430));

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/exit_E.png"))); // NOI18N
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 460, 70, 70));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/biblio.jpg"))); // NOI18N
        fondo.setOpaque(true);
        jPanel1.add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, 550));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistroActionPerformed

        RegistroUsuario registro = new RegistroUsuario();
        registro.setVisible(true);
        this.dispose();


    }//GEN-LAST:event_btnRegistroActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:

        if (evt.getSource() == btnLimpiar) {
            this.txtUser.setText("");
            this.Password.setText("");
        }
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed

        String nombreUsuario = this.txtUser.getText();
        char[] contrasenaChars = this.Password.getPassword();
        String contrasena = new String(contrasenaChars);

        if (evt.getSource() == btnAceptar) {
            if (!nombreUsuario.isEmpty() && !contrasena.isEmpty()) {
                try {
                    Connection conexion = Conexion.iniciar();
                    String consulta = "SELECT * FROM usuario WHERE TRIM(nombreUsuario)= ? AND TRIM(contrasena) = ? ";
                    PreparedStatement ps = conexion.prepareStatement(consulta);
                    ps.setString(1, nombreUsuario);
                    ps.setString(2, contrasena);
                    ResultSet r = ps.executeQuery();


                    if (r.next()) {
                        JOptionPane.showMessageDialog(null, "Bienvenido " + nombreUsuario, "Sesión iniciada", JOptionPane.INFORMATION_MESSAGE);
                        VentanaPrincipal newframe = new VentanaPrincipal();
                        newframe.setVisible(true);
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(null, "Usuario o contraseña inválidos", "Usuario no encontrado", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Error al iniciar sesión: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debe completar los campos", "Campos incompletos", JOptionPane.INFORMATION_MESSAGE);
            }
        }


    }//GEN-LAST:event_btnAceptarActionPerformed

    private void txtUserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Password.requestFocus();
//            Password.requestFocus();
        }

    }//GEN-LAST:event_txtUserKeyPressed

    private void PasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordKeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnAceptar.doClick();
        }
    }//GEN-LAST:event_PasswordKeyPressed

    private void txtUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyTyped
        // TODO add your handling code here:

        if (this.txtUser.getText().length() >= 40) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Limite de caracteres alcanzado", "Longitud de caracteres", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_txtUserKeyTyped

    private void PasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordKeyTyped
        // TODO add your handling code here:

        if (this.Password.getText().length() >= 40) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Limite de caracteres alcanzado", "Longitud de caracteres", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_PasswordKeyTyped

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        // Verifica si el botón "Salir" ha sido la fuente del evento
        if (btnSalir == evt.getSource()) {
            // Muestra un cuadro de diálogo de confirmación
            int confirmacion = JOptionPane.showConfirmDialog(
                    this, // El contexto del JFrame actual
                    "¿Estás seguro de que quieres salir?", // El mensaje del cuadro de diálogo
                    "Confirmar salida", // El título del cuadro de diálogo
                    JOptionPane.YES_NO_OPTION, // Opciones de "Sí" y "No"
                    JOptionPane.QUESTION_MESSAGE // Tipo de mensaje (ícono de pregunta)
            );

            // Si el usuario selecciona "Sí", el programa se cierra
            if (confirmacion == JOptionPane.YES_OPTION) {
                System.exit(0);  // Cierra el programa
            }
        }
    }//GEN-LAST:event_btnSalirActionPerformed

    public static void main(String[] args) throws SQLException {

        
        FlatRobotoFont.install();
        UIManager.put("defaultFont", new Font(FlatRobotoFont.FAMILY, Font.PLAIN, 19));

        Conexion.iniciar();
        

        //evaluar la condicion
        if (Conexion.conexion == null) {

            JOptionPane.showMessageDialog(null, "No se pudo conectar el servidor");
            System.exit(0);

        } else {

            new Login().setVisible(true);

        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPasswordField Password;
    public javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnRegistro;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel fondo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    public javax.swing.JPanel jpLogin;
    public javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

    private void estiloBuscador() {

        txtUser.putClientProperty(FlatClientProperties.STYLE, ""
                + "background: rgba(0, 0, 0, 0);" );
        
        Password.putClientProperty(FlatClientProperties.STYLE, ""
                + "background: rgba(0, 0, 0, 0);" );
        
        btnLimpiar.putClientProperty(FlatClientProperties.STYLE, ""
        +"hoverBackground: #DDDDDD;");
        
        btnAceptar.putClientProperty(FlatClientProperties.STYLE, ""
        +"hoverBackground: #DDDDDD;");
        
        btnSalir.putClientProperty(FlatClientProperties.STYLE, ""
        +"background: rgba(0, 0, 0, 0);"
        +"hoverBackground: #222222;");
        
        btnRegistro.putClientProperty(FlatClientProperties.STYLE, ""
        +"hoverBackground: #119855;"
        +"hoverForeground: #00FFFF;");

    }

    public void configTheme() {
        LocalTime horaLocal = LocalTime.now();

        if (horaLocal.isAfter(LocalTime.of(6, 0)) && horaLocal.isBefore(LocalTime.of(12, 0))) {
//            mensaje = "Buenos dias!";
            FlatMacLightLaf.setup();
        } else if (horaLocal.isAfter(LocalTime.of(12, 0)) && horaLocal.isBefore(LocalTime.of(18, 0))) {
//            mensaje = "Buenas tardes!";
            FlatMacLightLaf.setup();

        } else {
//            mensaje = "Buenas noches!";
            FlatMacDarkLaf.setup();
        }

    }

    //error
    private void ventanaLogin() {
        // Agrega un listener para cambiar la forma del JFrame una vez configurado
        addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent e) {
                // Configura bordes redondeados usando setShape
                setShape(new RoundRectangle2D.Double(0, 0, getWidth(), getHeight(), 90, 90));
            }
        });
    }

}
