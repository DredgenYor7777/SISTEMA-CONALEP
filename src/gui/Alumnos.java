package gui;

import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import controlador.bd.Crud;
import controlador.bd.Sql2;
import controlador.user.ControladorTabla;
import controlador.user.ControladorVentana;
import modelo.Alumno;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Alumnos extends javax.swing.JFrame {

    Crud crud;
    private int idSeleccionado = -1;
    private int idFilaTemporal;
    Alumnos examinarAlumno;
    DefaultTableModel modelo;

    public Alumnos() {
        initComponents();
                estiloBuscador();
        estiloTabla();
        this.setTitle("Alumnos");
        this.crud = new Crud();
        this.modelo = new DefaultTableModel();
        this.mostrarAlumnos();
        this.setExtendedState(MAXIMIZED_BOTH);
        ControladorVentana.ExitConfirmation(this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpContenedor = new javax.swing.JPanel();
        jpContenedor2 = new javax.swing.JPanel();
        txtBuscador = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAlumnos = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btRegresar = new javax.swing.JButton();
        lbTitulo = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        btnRegAl = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpContenedor.setBackground(new java.awt.Color(255, 255, 255));
        jpContenedor.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpContenedor2.setBackground(new java.awt.Color(255, 255, 255));
        jpContenedor2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del Alumno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Rounded MT Bold", 0, 12), new java.awt.Color(17, 152, 85))); // NOI18N
        jpContenedor2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtBuscador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscadorActionPerformed(evt);
            }
        });
        txtBuscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscadorKeyTyped(evt);
            }
        });
        jpContenedor2.add(txtBuscador, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 650, 40));

        btnBuscar.setForeground(new java.awt.Color(17, 152, 85));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jpContenedor2.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 60, -1, 40));

        tblAlumnos.setForeground(new java.awt.Color(17, 152, 85));
        tblAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblAlumnos.getTableHeader().setReorderingAllowed(false);
        tblAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAlumnosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAlumnos);

        jpContenedor2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 990, 220));

        jLabel9.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(17, 152, 85));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Clave del alumno:");
        jpContenedor2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 110, 40));

        jpContenedor.add(jpContenedor2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 1150, 390));

        jPanel3.setBackground(new java.awt.Color(17, 152, 85));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btRegresar.setForeground(new java.awt.Color(17, 152, 85));
        btRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/salida.png"))); // NOI18N
        btRegresar.setText("Regresar");
        btRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRegresarActionPerformed(evt);
            }
        });
        jPanel3.add(btRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 0, 210, 30));

        jpContenedor.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1380, 30));

        lbTitulo.setBackground(new java.awt.Color(0, 51, 153));
        lbTitulo.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 48)); // NOI18N
        lbTitulo.setForeground(new java.awt.Color(17, 152, 85));
        lbTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/libro.png"))); // NOI18N
        lbTitulo.setText("Alumnos");
        jpContenedor.add(lbTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 350, 90));

        btnEliminar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(17, 152, 85));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/trash2.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jpContenedor.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 610, 180, 70));

        jPanel4.setBackground(new java.awt.Color(17, 152, 85));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton4.setForeground(new java.awt.Color(17, 152, 85));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/salida.png"))); // NOI18N
        jButton4.setText("Regresar");
        jPanel4.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 0, 120, 30));

        jpContenedor.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 30));

        btnRegAl.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        btnRegAl.setForeground(new java.awt.Color(17, 152, 85));
        btnRegAl.setText("Registrar alumno");
        btnRegAl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegAlActionPerformed(evt);
            }
        });
        jpContenedor.add(btnRegAl, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 610, 230, 70));

        btnActualizar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(17, 152, 85));
        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editar.png"))); // NOI18N
        btnActualizar.setText("Modificar alumno");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jpContenedor.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 610, 210, 70));

        btnGuardar.setBackground(new java.awt.Color(204, 255, 0));
        btnGuardar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editar.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.setOpaque(true);
        btnGuardar.setSelected(true);
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarMouseClicked(evt);
            }
        });
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jpContenedor.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 610, 150, 70));

        getContentPane().add(jpContenedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1380, 730));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscadorActionPerformed

    private void btRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRegresarActionPerformed
        // TODO add your handling code here:

        VentanaPrincipal newframe = new VentanaPrincipal();
        newframe.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_btRegresarActionPerformed

    private void tblAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAlumnosMouseClicked

        int fila = this.tblAlumnos.getSelectedRow();
        idSeleccionado = Integer.parseInt(tblAlumnos.getValueAt(fila, 0).toString());
        ControladorTabla.getInstance().setIdSeleccionado(idSeleccionado);
        
        System.out.println("fila = " + fila);

    }//GEN-LAST:event_tblAlumnosMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        
        
        boolean resultado = false;

if (tblAlumnos.getSelectedRow() == -1) {
    JOptionPane.showMessageDialog(null, "Error no seleccionó un registro");
} else {
    int respuesta = JOptionPane.showConfirmDialog(
        null, 
        "¿Está seguro de que desea eliminar este registro?", 
        "Confirmar eliminación", 
        JOptionPane.YES_NO_OPTION
    );

    if (respuesta == JOptionPane.YES_OPTION) {
        // Proceder con la eliminación
        resultado = this.crud.actualizarEliminar(Sql2.eliminarAlumno(this.idSeleccionado));

        if (resultado) {
            JOptionPane.showMessageDialog(null, "Eliminado");
            mostrarAlumnos();
        } else {
            JOptionPane.showMessageDialog(null, "No eliminado");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Operación cancelada");
    }
}


    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:

        if (evt.getSource() == this.btnBuscar) {
            buscar();
        }


    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtBuscadorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscadorKeyTyped
        // TODO add your handling code here:

        if (this.txtBuscador.getText().length() >= 4) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Limite de caracteres alcanzado", "Longitud de caracteres", JOptionPane.INFORMATION_MESSAGE);

        }

        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            evt.consume();

            JOptionPane.showMessageDialog(null, "No puede ingresar letras", "Tipo de entrada", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_txtBuscadorKeyTyped

    private void btnRegAlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegAlActionPerformed
        // TODO add your handling code here:

        RegistroAlumnos newframe = new RegistroAlumnos();
        newframe.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegAlActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        
        btnGuardar.setEnabled(true);

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseClicked

        //        tblInventario.setEnabled(true);
        //        btnGuardar.setEnabled(true);
        
        
    }//GEN-LAST:event_btnGuardarMouseClicked

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        this.dispose();


        if (tblAlumnos.getSelectedRow() == -1) {   

            JOptionPane.showMessageDialog(null, "Error no selecciono un registro");

        } else {

            RegistroAlumnos actualizarAlumno = new RegistroAlumnos();
            actualizarAlumno.setVisible(true);
            actualizarAlumno.btnActualizarAl.setEnabled(true);
            actualizarAlumno.btnAgregar.setEnabled(false);
            int fil = this.tblAlumnos.getSelectedRow();

            idSeleccionado = Integer.parseInt(this.tblAlumnos.getValueAt(fil, 0).toString());
            String nombre = this.tblAlumnos.getValueAt(fil, 1).toString();
            String apellido = this.tblAlumnos.getValueAt(fil, 2).toString();
            String correo = this.tblAlumnos.getValueAt(fil, 3).toString();
            String telefono = this.tblAlumnos.getValueAt(fil, 4).toString();
            String edad = this.tblAlumnos.getValueAt(fil, 5).toString();

            actualizarAlumno.txtNombre.setText(nombre);
            actualizarAlumno.txtApellido.setText(apellido);
            actualizarAlumno.txtDireccion.setText(correo);
            actualizarAlumno.txtTelefono.setText(telefono);
            actualizarAlumno.txtEdad.setText(edad);
            

        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btRegresar;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnRegAl;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jpContenedor;
    private javax.swing.JPanel jpContenedor2;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JTable tblAlumnos;
    private javax.swing.JTextField txtBuscador;
    // End of variables declaration//GEN-END:variables

    public void mostrarAlumnos() {

        this.modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Hacer que todas las celdas sean no editables
            }
        };

//    DefaultTableModel modelo = (DefaultTableModel) this.tblAlumnos.getModel();
        this.modelo.addColumn("Clave del alumno");
        this.modelo.addColumn("Nombre");
        this.modelo.addColumn("Apellidos");
        this.modelo.addColumn("Dirección");
        this.modelo.addColumn("Teléfono");
        this.modelo.addColumn("Edad");

        try {
            ResultSet resultado = this.crud.seleccionar(Sql2.seleccionarAlumnos());

            while (resultado.next()) {  //usar objeto resultado y el metodo next que permitira iterar entre todos los resultados

                Object[] alumnos = { //objeto que se anexara al modelo

                    resultado.getInt(1),
                    resultado.getString(2),
                    resultado.getString(3),
                    resultado.getString(4),
                    resultado.getString(5),
                    resultado.getInt(6)

                };

                modelo.addRow(alumnos);

            }//cierra while

            this.tblAlumnos.setModel(modelo);

        } catch (SQLException e) {
            System.out.println("error " + e.getMessage());
        }

    }// cierra metodo mostrarAlumnos      

    private void buscar() {
        try {
            int idBuscar = Integer.parseInt(this.txtBuscador.getText());
            int filas = this.modelo.getRowCount();
//            boolean encontrado = false;
            if (idBuscar != -1) {
                for (int i = 0; i < filas; i++) {
                    int idModelo = Integer.parseInt(modelo.getValueAt(i, 0).toString());
                    if (idModelo == idBuscar) {
                        this.idFilaTemporal = i;
                        this.tblAlumnos.setRowSelectionInterval(i, i);
                        this.tblAlumnos.scrollRectToVisible(this.tblAlumnos.getCellRect(i, 0, true));
                        ControladorTabla.getInstance().setIdSeleccionado(idModelo);

//                        encontrado = true;
                        return;
                    }
                }

            }
            JOptionPane.showMessageDialog(null, "Número no encontrado",
                    "Error", JOptionPane.ERROR_MESSAGE);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Formato invalido",
                    "Error de formato", JOptionPane.ERROR_MESSAGE);
        } //cierra catch
    } //cierra buscar

    public String getTableData(DefaultTableModel modelo) {
        StringBuilder data = new StringBuilder();
        int columnCount = modelo.getColumnCount();
        int rowCount = modelo.getRowCount();

        // Obtener los nombres de las columnas
        for (int i = 0; i < columnCount; i++) {
            data.append(modelo.getColumnName(i)).append("\t");
        }
        data.append("\n");

        // Obtener las filas
        for (int i = 0; i < rowCount; i++) {
            for (int j = 0; j < columnCount; j++) {
                data.append(modelo.getValueAt(i, j)).append("\t");
            }
            data.append("\n");
        }

        return data.toString();
    }
    
    
    private void estiloBuscador(){
    
    txtBuscador.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Buscar...");
    
    txtBuscador.putClientProperty(FlatClientProperties.TEXT_FIELD_LEADING_ICON, new FlatSVGIcon("img/buscador.svg"));
     
    txtBuscador.putClientProperty(FlatClientProperties.STYLE, ""
        + "arc:13;"
        + "borderWidth:0;"
        + "focusWidth:0;"
        + "innerFocusWidth:0;"
        + "margin:5,20,5,20;"
        + "background:$Panel.background");
}

private void estiloTabla(){
    
     jScrollPane1.putClientProperty(FlatClientProperties.STYLE, ""
                + "arc:25;"
                + "background:$Table.background;");
    
    
     tblAlumnos.getTableHeader().putClientProperty(FlatClientProperties.STYLE, ""
        + "height:30;"
        + "hoverBackground:null;"
        + "pressedBackground:null;"
        + "separatorColor:$TableHeader.background;"
        + "font:bold;");
     
     tblAlumnos.putClientProperty(FlatClientProperties.STYLE, ""
        + "rowHeight:30;"
        + "showHorizontalLines:true;"
        + "intercellSpacing:0,1;"
        + "cellFocusColor:$TableHeader.hoverBackground;"
        + "selectionBackground:$TableHeader.hoverBackground;"
        + "selectionForeground:$Table.foreground;");
    
    
}

}
